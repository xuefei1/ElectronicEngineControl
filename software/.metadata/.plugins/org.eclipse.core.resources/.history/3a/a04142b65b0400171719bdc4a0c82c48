/*
 * throttle_data.c
 *
 *  Created on: Mar 8, 2017
 *      Author: xuefei1
 *
 *      Status: C
 */

#include "throttle_data.h"

INT8U throttle_angle_to_pulse_width[MAX_THROTTLE_DEG + 1];

INT16U RPM_gear_to_throttle_pos[MAX_SCALED_RPM + 1][NUM_GEARS + 1];

#define GET_GEAR_RATIO(GEAR)				get_gear_ratio(GEAR)

static INT8U get_gear_ratio(INT8U gear){
	if(gear == 1){
		return GEAR_RATIO_1ST;
	}else if(gear == 2){
		return GEAR_RATIO_2ND;
	}else if(gear == 4){
		return GEAR_RATIO_4TH;
	}else{
		return GEAR_RATIO_3RD;
	}
}

void init(){
	INT8U i;
	INT8U j;
	throttle_angle_to_pulse_width[0] = 0;
	for(i = 1; i < MAX_THROTTLE_DEG + 1; i++){
		throttle_angle_to_pulse_width[i] = throttle_angle_to_pulse_width[i - 1] + PULSE_WIDTH_TO_DEG_INCREMENT;
	}
	RPM_gear_to_throttle_pos[0][0] = 0;
	RPM_gear_to_throttle_pos[0][1] = 0;
	RPM_gear_to_throttle_pos[0][2] = 0;
	RPM_gear_to_throttle_pos[0][3] = 0;
	RPM_gear_to_throttle_pos[0][4] = 0;
	for(i = 1; i < MAX_SCALED_RPM + 1; i++){
		for(j = 1; j < NUM_GEARS + 1; j++){
			RPM_gear_to_throttle_pos[]
		}
	}
}

INT8U get_duty_cycle_for_angle(INT8U angle){}

INT16U get_throttle_pos_for_RPM_gear(INT8U gear, INT8U RPM_scaled);

INT8U get_new_RPM_needed(INT16U curr_RPM, INT8U curr_gear, INT8U new_gear);


